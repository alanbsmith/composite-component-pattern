{"version":3,"sources":["components/__common__/Badge/index.js","components/__common__/Button/index.js","components/__common__/Flex/Container/index.js","components/__common__/Card/index.js","components/__common__/Flex/index.js","components/__common__/Flex/Item/index.js","components/__common__/Heading/index.js","components/__common__/Text/index.js","components/UserProfileCard/ProfileCard/Avatar/index.js","components/UserProfileCard/ProfileCard/index.js","components/UserProfileCard/ProfileCard/Bio/index.js","components/UserProfileCard/ProfileCard/Body/index.js","components/UserProfileCard/ProfileCard/Footer/index.js","components/UserProfileCard/ProfileCard/Header/index.js","components/UserProfileCard/mockData.js","components/UserProfileCard/Connector.js","components/UserProfileCard/utils.js","components/UserProfileCard/index.js","App/index.js","serviceWorker.js","index.js"],"names":["Badge","_ref","_ref$className","className","props","Object","objectWithoutProperties","classNames","concat","trim","react_default","a","createElement","assign","Button","Container","Card","Container_Container","Flex","Heading","_ref$as","as","Tag","Text","Avatar","src","alt","ProfileCard","Card_Card","Bio","Body","Footer","Header","mockData","name","username","backgroundPic","profilePic","bio","isFollowing","isFriend","tweetCount","followerCount","friendsCount","initialState","formatNumber","number","arguments","length","undefined","toLocaleString","toFixed","WrappedComponent","withConnector","ProfileCard_ProfileCard","Button_Button","Heading_Heading","Text_Text","Badge_Badge","_React$Component","Connector","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","profileData","inherits","createClass","key","value","fetchProfileCardData","setState","React","Component","App","components_UserProfileCard","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4a3e0cc0.chunk.js","sourcesContent":["import React from \"react\";\n\nimport \"./index.scss\";\n\nexport const Badge = ({ className = \"\", ...props }) => {\n  const classNames = `badge ${className}`.trim();\n  return <span className={classNames} {...props} />;\n};\n","import React from \"react\";\n\nimport \"./index.scss\";\n\nexport const Button = ({ className = \"\", ...props }) => {\n  const classNames = `button ${className}`.trim();\n  return <button className={classNames} {...props} />;\n};\n\nexport default Button;\n","import React from \"react\";\n\nimport \"./index.scss\";\n\nexport const Container = ({ className = \"\", ...props }) => {\n  const classNames = `flex-container ${className}`.trim();\n  return <div className={classNames} {...props} />;\n};\n","import React from \"react\";\n\nimport { Container } from \"../Flex/Container\";\n\nimport \"./index.scss\";\n\nexport const Card = ({ className = \"\", ...props }) => {\n  const classNames = `card ${className}`.trim();\n  return <Container className={classNames} {...props} />;\n};\n","import { Container } from \"./Container\";\nimport { Item } from \"./Item\";\n\nexport const Flex = {\n  Container,\n  Item\n};\n","import React from \"react\";\n\nimport \"./index.scss\";\n\nexport const Item = ({ className = \"\", ...props }) => {\n  const classNames = `flex-item ${className}`.trim();\n  return <div className={classNames} {...props} />;\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport \"./index.scss\";\n\nexport const Heading = ({ as: Tag = \"h1\", className = \"\", ...props }) => {\n  const classNames = `heading ${className}`.trim();\n  return <Tag className={classNames} {...props} />;\n};\n\nHeading.propTypes = {\n  as: PropTypes.oneOf([\"h1\", \"h2\", \"h3\", \"h4\"])\n};\n\nexport default Heading;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport \"./index.scss\";\n\nexport const Text = ({ as: Tag = \"span\", className = \"\", ...props }) => {\n  const classNames = `text ${className}`.trim();\n  return <Tag className={classNames} {...props} />;\n};\n\nText.propTypes = {\n  as: PropTypes.oneOf([\"p\", \"span\", \"strong\"])\n};\n\nexport default Text;\n","import React from \"react\";\n\nimport \"./index.scss\";\n\nexport const Avatar = ({ className = \"\", src, ...props }) => {\n  const classNames = `avatar ${className}`.trim();\n  return (\n    <div className={classNames} {...props}>\n      {src && <img src={src} alt=\"profile card profile\" />}\n    </div>\n  );\n};\n\nexport default Avatar;\n","import React from \"react\";\n\nimport { Card } from \"../../__common__\";\n\nimport { Avatar } from \"./Avatar\";\nimport { Bio } from \"./Bio\";\nimport { Body } from \"./Body\";\nimport { Footer } from \"./Footer\";\nimport { Header } from \"./Header\";\n\nimport \"./index.scss\";\n\nexport const ProfileCard = props => {\n  return <Card className=\"profile-card\" {...props} />;\n};\n\nProfileCard.Avatar = Avatar;\nProfileCard.Bio = Bio;\nProfileCard.Body = Body;\nProfileCard.Footer = Footer;\nProfileCard.Header = Header;\n","import React from \"react\";\n\nimport { Flex } from \"../../../__common__\";\n\nimport \"./index.scss\";\n\nexport const Bio = ({ className = \"\", ...props }) => {\n  const classNames = `profile-card__bio ${className}`.trim();\n  return <Flex.Item className={classNames} {...props} />;\n};\n","import React from \"react\";\n\nimport { Flex } from \"../../../__common__\";\n\nimport \"./index.scss\";\n\nexport const Body = ({ className = \"\", ...props }) => {\n  const classNames = `profile-card__body ${className}`.trim();\n  return <Flex.Container className={classNames} {...props} />;\n};\n","import React from \"react\";\n\nimport { Flex } from \"../../../__common__\";\n\nimport \"./index.scss\";\n\nexport const Footer = ({ className = \"\", ...props }) => {\n  const classNames = `profile-card__footer ${className}`.trim();\n  return <Flex.Container className={classNames} {...props} />;\n};\n","import React from \"react\";\n\nimport { Flex } from \"../../../__common__\";\n\nimport \"./index.scss\";\n\nexport const Header = ({ className = \"\", src, ...props }) => {\n  const classNames = `profile-card__header ${className}`.trim();\n  return (\n    <Flex.Container className={classNames} {...props}>\n      {src && <img src={src} alt=\"profile card header\" />}\n    </Flex.Container>\n  );\n};\n","const mockData = {\n  name: \"Jeff Goldblum\",\n  username: \"@jeffreygoldbIum\",\n  backgroundPic: \"https://pbs.twimg.com/profile_banners/2877259509/1535411967\",\n  profilePic:\n    \"https://pbs.twimg.com/profile_images/1034219136199602176/4e8CGxPD_400x400.jpg\",\n  bio:\n    \"Legend of film, TV & stage. Cats & Dogs, Holy Man and the Curry's Christmas Ad campaign 2015 * no tick *\",\n  isFollowing: true,\n  isFriend: true,\n  tweetCount: 3438,\n  followerCount: 86300,\n  friendsCount: 7\n};\n\nexport default mockData;\n","import React from \"react\";\nimport mockData from \"./mockData\";\n\nconst initialState = {\n  profilePic: \"\",\n  backgroundPic: \"\",\n  username: \"\",\n  name: \"\",\n  bio: \"\",\n  isFollowing: false,\n  isFriend: false,\n  tweetCount: 0,\n  followerCount: 0,\n  friendsCount: 0\n};\n\nexport function withConnector(WrappedComponent) {\n  return class Connector extends React.Component {\n    constructor(props) {\n      super(props);\n\n      this.state = {\n        profileData: initialState\n      };\n    }\n\n    componentDidMount() {\n      this.fetchProfileCardData();\n    }\n\n    fetchProfileCardData() {\n      this.setState({\n        profileData: mockData\n      });\n    }\n\n    render() {\n      return <WrappedComponent {...this.state.profileData} />;\n    }\n  };\n}\n","export function formatNumber(number = 0) {\n  if (number < 10000) {\n    return number.toLocaleString();\n  }\n  if (number < 1000000) {\n    return `${(number / 1000).toFixed(1)}K`;\n  }\n  return `${(number / 1000000).toFixed(1)}M`;\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n// common components\nimport { Badge, Button, Flex, Heading, Text } from \"../__common__\";\n// profile card components\nimport { ProfileCard } from \"./ProfileCard\";\n// connector\nimport { withConnector } from \"./Connector\";\n// utils\nimport { formatNumber } from \"./utils\";\n\nconst UserProfileCard = props => {\n  return (\n    <ProfileCard>\n      <ProfileCard.Header src={props.backgroundPic} />\n      <ProfileCard.Body>\n        <ProfileCard.Avatar src={props.profilePic} />\n        <Flex.Item className=\"justify-content-flex-end\">\n          {props.isFriend\n            ? <Button className=\"primary\">Following</Button>\n            : <Button>Follow</Button>}\n        </Flex.Item>\n        <Heading as=\"h3\">\n          {props.name}\n        </Heading>\n        <Flex.Item>\n          <Text>\n            {props.username}\n          </Text>\n          {props.isFollowing && <Badge>Follows you</Badge>}\n        </Flex.Item>\n        <ProfileCard.Bio className=\"flex-1\">\n          <Text className=\"stretch\">\n            {props.bio}\n          </Text>\n        </ProfileCard.Bio>\n      </ProfileCard.Body>\n      <ProfileCard.Footer>\n        <Flex.Item className=\"column flex-1\">\n          <Text className=\"small bold\">Tweets</Text>\n          <Text className=\"xlarge bold\">\n            {formatNumber(props.tweetCount)}\n          </Text>\n        </Flex.Item>\n        <Flex.Item className=\"column flex-1\">\n          <Text className=\"small bold\">Following</Text>\n          <Text className=\"xlarge bold\">\n            {formatNumber(props.friendsCount)}\n          </Text>\n        </Flex.Item>\n        <Flex.Item className=\"column flex-1\">\n          <Text className=\"small bold\">Followers</Text>\n          <Text className=\"xlarge bold\">\n            {formatNumber(props.followerCount)}\n          </Text>\n        </Flex.Item>\n      </ProfileCard.Footer>\n    </ProfileCard>\n  );\n};\n\nUserProfileCard.propTypes = {\n  profilePic: PropTypes.string.isRequired,\n  backgroundPic: PropTypes.string.isRequired,\n  username: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  bio: PropTypes.string.isRequired,\n  isFollowing: PropTypes.bool.isRequired,\n  isFriend: PropTypes.bool.isRequired,\n  tweetCount: PropTypes.number.isRequired,\n  followerCount: PropTypes.number.isRequired,\n  friendsCount: PropTypes.number.isRequired\n};\nexport default withConnector(UserProfileCard);\n","import React from \"react\";\n\nimport UserProfileCard from \"../components/UserProfileCard\";\n\nimport \"./index.scss\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <UserProfileCard>hello</UserProfileCard>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}